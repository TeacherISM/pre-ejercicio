name: Lambda Workflow
on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f python3/requirements.txt ]; then pip install -r python3/requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            if [ -f python3/requirements.txt ]; then pip install -r python3/requirements.txt; fi
      - name: Test with pytest
        run: |
          RUN_ENV=dev 
          coverage run -m pytest python3/src/
          coverage report
          coverage html -d cc_report/

  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            if [ -f python3/requirements.txt ]; then pip install -r python3/requirements.txt; fi
      - name: Package Lambda function
        run: |
          mkdir lambda_package
          cp python3/src/app.py lambda_package/
          cp python3/requirements.txt lambda_package/
          cp python3/Dockerfile lambda_package/
          cd lambda_package
          zip -r ../lambda.zip .
      - name: Publish Lambda ZIP artifact
        uses: actions/upload-artifact@v2
        with:
          name: lambda-package
          path: lambda.zip

    # deploy:
    #   name: Deploy
    #   needs: [package]
    #   runs-on: ubuntu-latest

    #   steps:
    #     - name: Checkout repository
    #       uses: actions/checkout@v3
